<!--THIS IS STILL IN A HTML FILE NOT ACTUAL CSS YET!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
use < link rel="stylesheet" type="text/css" href=""> to link a thing

in the header, use style element and inside a body tag with backround color to kinda make a highlighter. Select with type of wording tag

use just color to change text color

use font size and then a value with px

use font family to change the actual font

use border for a header and add bottom to teh 
border to make the line at the bottom

To make changes to entire website, use body {} and then put in the specifications. You can still overide if you want to 
add a class(<p class=""> or <h4 class="") and then in teh style, use the same element with . and whatever you named the class

to ad a clas to multiple stuff, use same name then remove either p or h1-4 tage in stle bit
font weights are(in order from lightest to boldest) lighter, normal, bold, bolder

If using external CSS document, use <link rel="stylesheet" type="text/css" href="name of CSS document">
use text decoration for underlines, and stuff liek that'

use font style for italics and other stuff

use position for where the text shoud go(sticky means it stays with the page when you scroll,absolute is removed from the flow so it can go ontop of other things and can be anywhere so it'll move with webpage and starts at top of screen, fixed stays in same place when scrolled, relative is teh same as the first static element so it will treat the last thing its next to as the top and so on,static just isnt special so its the defaul that the browser adds ): then use left, right, top, botom for positoning: width for how long the box should be and then add a border

use z-index to make stuff go behind the header

use the margin tab to put  how far stuff should be from edges of screen

use border for border stuff around text or other stuff

for backround image, do that and add url();

instead of class, use id and in the css use # instead of a period

use text align to easily align text anywhere on the page

border cn have color, width, and then dotted, dashed, groove, double, inset, outset, ridge, solid
to curve a border, you can use border-(bottom, left, top, right)-radius or just border radius
use div to make sections in your webpage
use link, visited, hover in that order to ass different effects for links

when doing backround stuff in one line, do it in this order...background-color,background-image,background-repeat,background-attachment,background-position

z index is what thing comes first on the page like orde rof layes(higher number is like further up)
block is up and down while inline is side to side
use float to make an element not take up all the space while keping things nect to it. you need a width though like use it to make text go right next to a image and use margin on the image to make it go over further

use overflow (scroll for scroll bar, hidden to hide text, )

cursor: can be used to overide what the cursor 
displays and can be made custom by using a .ico or free icons to make one 

use max width to make sure things resize

use !importatn to change when you need to overide inheritance

use inline-block to apply efects of both. Will recognize height but not gonna line break(can apply width and height)

descendant selector selects an element inside an emelment so a <p> inside of a <div>

use > if doing child seelctor but has to come right after the element you want to be the parent so a direct child

if you have multiple aspects with the same thing like border stuff or color, just put them all in one line of code like try not to repeat stuff over and over

use plus sign for adjacent siblings  so right nex to (h2+p).... use (h2~p) for everything past the h2
use [a,href,li,ul] and so on after a tag to list stuff with those exact tags

if you want to select a certain element out of a list of all teh same elements like paragraphs, use p:nth-child() then either the number or number sof the ones you want to select////if you want a patter like every 5th, do 5n and every 3rd would be 3n

use :not() to select what selector(id, class, or element) you want to excllude from the changes
use opactiy then value 0-1 tochange how transparent and object is

use text-shadow or box-shadow to add a shadow to a text or other items(first and second slot are vertical and horizontal, 3rd is for the blur, and las tis color where you can add opactiy value)...can add multiple shadows if you wanted to 


use text-decoratiopn to remove underline form link
use word-spacing to space out words
you can use transform to make an object move up and down/left and right[translate(X,Y)], rotate an element[rotate(degrees)], change size of image [scale(width,height)] or use scaleX for widdth and scaleY for height, rotateX for X axis and rotateY for Y axis//////you can have multiple in the same line

use transtition for a simple animation and it connencts to your transfomrs///make sure to apply it to the actual elemnt and not the hover one///then do transtition: and (time for each transfomr or change, )//// the time can be applies to anything in the hover class///add linear to make it smooth and ewual all around, use ease-in to make it start slow then speed up, use ease-out for slow ending, ease-in-out for slow start and end///////can add a delay using transtition-delay:(time)
use outline:none to remove border when a buton is pressed...... transition shorthand:type of transtition, time to complete, type of action(linear, ease, etc), delay


add disabled to a button in html to make it not clickable


use display flex to make elenments inside of the dive go left to right in a row(similar to float)....use {flex-grow to make all items grow the same to take up same amount of space} {use flex-shrink to do teh opposite of flex grow it will just shrink when the webpage shrinks} {use flex-wrap to make elements wrap down if page is shrunk past the min-width} {use flex basis to show how far the object may grow( basically a minimum width)} {use justify-content:center, flex-end,space-around , flex start, space-between} { flex flow:row is when main axis is X and xross axis is Y... if its column so stuff is going down, then cross axis is X nd main axis is Y} { use align items to help with alignment} {shorthand for flex is flex:X Y Z where X is grow, Y is shrink, and Z is flex basis}
flex-direction:column, row, or reverse of either
flex-wrap: what direction thigns wil wrap if needed(default is none)  wrap, nowrap, wrap-reverse
use flex-flow: to do both flex direction and flex wrap so you can do......flex-flow:row wrap;
justify-content:{flex-start is beginngin of flexbox, flex-ed is end of container, center is center of flex box, space around is equal space before, between, and after, space-between is space between}
align-items:is used to how items should be aligned vertically{center, flex-end, flex-start, stretch, baseline}
align-content: simialr to justify content but vertically
to perfectly alignitems, use justify-content:center and align items:center
use inline-flex to not take up all space of screen but only required space


to do a gradient, use bacroundimage then linear or radial gradient(direction or/ angle, color1, color 2, color3... )



to add a icon to the title next to the tab in chrome, use <lin rel="icon" href="(image)"



@keyframes then name of animation to make an animation. Then {} and add values of 0%-100% to say what you want to happen 
animation fillmode-forwardskeep 0% stuff hwen animation finishes, backwards is keep 100% stuf when animation is done, both will do both
animation-play-state:paused or running will stop or run program
animation short hand :name, duration, timing(ease, linear, etc), length of animaiton in seconds, fill-mode, how many times you want animation to repeat(# or infinite), direction of animation(alternate will make it go one way then other way), delay in seconds

must use a content:''; tag to show what you want content inside element would be
::before -like a normal css elment when webpage loads
::after-will go after content 

display:Grid allows you to place things in rows and columns but they ony take up teh space that they need to
use display:inline to make it behave as if it were an inline and it will only take up the amount of horizontal space it needs
grid gaps are spaces betwwen rows or columns and can be adjusted by using either grid-colum gap, grid-rwo-gap, or grip-gap(grid-row grid-column or one vale for both)
use grid-colum-start and end to say how many columns and same thing for rows
grid-template-columns:number of columns in the grid layout and their widths(use auto to make it automatic)
grid-template-rows:height of the rows(use auto to make it grow with content inside)
justify-content to say where it belongs(same as felxbo)
align-content is for vertical movement
use grid-column and grid-row to say where an item should start and end. use 1/span 3 for it to start at 1st column and go over 3 columnsuse grid-area to name areas
can name multiple areas and use them to say how far over they should go 
{home home home home home
 Left Left center RIght RIght
 Left Footer Footer Right Right
}
use auto-fit in either grid-template to make items take up available space

in a link, add target="_blank" to mak eit open in a new tab

TO CHANGE SCROLL bar
::-webkit-scrollbar-the scrollbar/usually handles the width

::-webkit-scrollbar-button the buttons on the scrollbar (arrows pointing upwards and downwards... if not present in css, they wont appear).

::-webkit-scrollbar-thumb the draggable scrolling handle(can hae a color, hover state, rounded corners).

::-webkit-scrollbar-track the track (progress bar) of the scrollbar.(actualy part of the scroll track where thethumb moces and can be colored)

::-webkit-scrollbar-track-piece the track (progress bar) NOT covered by the handle.

::-webkit-scrollbar-corner the bottom corner of the scrollbar, where both horizontal and vertical scrollbars meet.

::-webkit-resizer the draggable resizing handle that appears at the bottom corner of some elements.






use the :target psuedo class to have stuff happen when a link is pressed

 use the ::selection class to define what happens if text is dragged and selected

set a variable oin teh :root element bydoing--name and call it byt doing var(--name)

use perspective in transform for how far away an object should be from the user:Higher values are usually better